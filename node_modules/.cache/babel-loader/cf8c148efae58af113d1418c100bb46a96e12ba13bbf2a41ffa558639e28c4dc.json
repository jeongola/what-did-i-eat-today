{"ast":null,"code":"var _jsxFileName = \"/Users/yoojeongkim/Documents/Kim-Yoo-Jeong/[\\u110B\\u1175\\u11AB\\u1111\\u1173\\u1105\\u1165\\u11AB] \\u1112\\u1161\\u11AB\\u110B\\u1175\\u11B8 \\u110F\\u1173\\u1100\\u1175\\u1105\\u1169 \\u110C\\u1161\\u11AF\\u1105\\u1161 \\u1106\\u1165\\u11A8\\u1102\\u1173\\u11AB \\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173(React.js) - \\u1100\\u1175\\u110E\\u1169\\u1107\\u116E\\u1110\\u1165 \\u1109\\u1175\\u11AF\\u110C\\u1165\\u11AB\\u1101\\u1161\\u110C\\u1175 /what-did-i-eat-today/src/components/DiaryList.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DiaryItem from './DiaryItem';\nimport MyButton from './MyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortOptionList = [{\n  value: 'latest',\n  name: 'latest'\n}, {\n  value: 'oldest',\n  name: 'oldest'\n}];\nconst filterOptionList = [{\n  value: 'all',\n  name: 'all'\n}, {\n  value: 'good',\n  name: 'Gym rat 💪🏻'\n}, {\n  value: 'bad',\n  name: 'gained weight 😥'\n}];\nconst ControlMenu = _ref => {\n  let {\n    value,\n    onChange,\n    optionList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    className: \"ControlMenu\",\n    value: value,\n    onChange: e => onChange(e.target.value),\n    children: optionList.map((it, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: it.value,\n      children: it.name\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = ControlMenu;\nconst DiaryList = _ref2 => {\n  _s();\n  let {\n    diaryList\n  } = _ref2;\n  const navigate = useNavigate();\n  const [sortType, setSortType] = useState('latest');\n  const [filter, setFilter] = useState('all');\n  const getProcessedDiaryList = () => {\n    const filterCallback = item => {\n      if (filter === 'good') {\n        return parseInt(item.exercise) >= 3;\n      } else {\n        return parseInt(item.exercise) < 3;\n      }\n    };\n    const compare = (a, b) => {\n      if (sortType === 'latest') {\n        return parseInt(b.date) - parseInt(a.date);\n      } else {\n        return parseInt(a.date) - parseInt(b.date);\n      }\n    };\n    const copyList = JSON.parse(JSON.stringify(diaryList));\n    const filterdList = filter === 'all' ? copyList : copyList.filter(it => filterCallback(it));\n    const sortedList = filterdList.sort(compare);\n    return sortedList;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left_col\",\n        children: [/*#__PURE__*/_jsxDEV(ControlMenu, {\n          value: sortType,\n          onChange: setSortType,\n          optionList: sortOptionList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ControlMenu, {\n          value: filter,\n          onChange: setFilter,\n          optionList: filterOptionList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right_col\",\n        children: /*#__PURE__*/_jsxDEV(MyButton, {\n          type: 'positive',\n          text: 'New Diary',\n          onClick: () => navigate('/new')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), getProcessedDiaryList().map(it => /*#__PURE__*/_jsxDEV(DiaryItem, {\n      ...it\n    }, it.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryList, \"yUrs4jIx912NZmXymYewaA0noRo=\", false, function () {\n  return [useNavigate];\n});\n_c2 = DiaryList;\nDiaryList.defaultProps = {\n  diaryList: []\n};\nexport default DiaryList;\nvar _c, _c2;\n$RefreshReg$(_c, \"ControlMenu\");\n$RefreshReg$(_c2, \"DiaryList\");","map":{"version":3,"names":["useState","useNavigate","DiaryItem","MyButton","sortOptionList","value","name","filterOptionList","ControlMenu","onChange","optionList","e","target","map","it","idx","DiaryList","diaryList","navigate","sortType","setSortType","filter","setFilter","getProcessedDiaryList","filterCallback","item","parseInt","exercise","compare","a","b","date","copyList","JSON","parse","stringify","filterdList","sortedList","sort","id","defaultProps"],"sources":["/Users/yoojeongkim/Documents/Kim-Yoo-Jeong/[인프런] 한입 크기로 잘라 먹는 리액트(React.js) - 기초부터 실전까지 /what-did-i-eat-today/src/components/DiaryList.js"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DiaryItem from './DiaryItem';\nimport MyButton from './MyButton';\n\nconst sortOptionList = [\n  { value: 'latest', name: 'latest' },\n  { value: 'oldest', name: 'oldest' },\n];\n\nconst filterOptionList = [\n  { value: 'all', name: 'all' },\n  { value: 'good', name: 'Gym rat 💪🏻' },\n  { value: 'bad', name: 'gained weight 😥' },\n];\n\nconst ControlMenu = ({ value, onChange, optionList }) => {\n  return (\n    <select className='ControlMenu' value={value} onChange={(e) => onChange(e.target.value)}>\n      {optionList.map((it, idx) => (\n        <option key={idx} value={it.value}>\n          {it.name}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nconst DiaryList = ({ diaryList }) => {\n  const navigate = useNavigate();\n  const [sortType, setSortType] = useState('latest');\n  const [filter, setFilter] = useState('all');\n\n  const getProcessedDiaryList = () => {\n    const filterCallback = (item) => {\n      if (filter === 'good') {\n        return parseInt(item.exercise) >= 3;\n      } else {\n        return parseInt(item.exercise) < 3;\n      }\n    };\n\n    const compare = (a, b) => {\n      if (sortType === 'latest') {\n        return parseInt(b.date) - parseInt(a.date);\n      } else {\n        return parseInt(a.date) - parseInt(b.date);\n      }\n    };\n    const copyList = JSON.parse(JSON.stringify(diaryList));\n    const filterdList = filter === 'all' ? copyList : copyList.filter((it) => filterCallback(it));\n    const sortedList = filterdList.sort(compare);\n    return sortedList;\n  };\n\n  return (\n    <div className='DiaryList'>\n      <div className='menu_wrapper'>\n        <div className='left_col'>\n          <ControlMenu value={sortType} onChange={setSortType} optionList={sortOptionList} />\n          <ControlMenu value={filter} onChange={setFilter} optionList={filterOptionList} />\n        </div>\n        <div className='right_col'>\n          <MyButton type={'positive'} text={'New Diary'} onClick={() => navigate('/new')} />\n        </div>\n      </div>\n\n      {getProcessedDiaryList().map((it) => (\n        <DiaryItem key={it.id} {...it} />\n      ))}\n    </div>\n  );\n};\n\nDiaryList.defaultProps = {\n  diaryList: [],\n};\n\nexport default DiaryList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}