{"ast":null,"code":"var _jsxFileName = \"/Users/yoojeongkim/Documents/Kim-Yoo-Jeong/[\\u110B\\u1175\\u11AB\\u1111\\u1173\\u1105\\u1165\\u11AB] \\u1112\\u1161\\u11AB\\u110B\\u1175\\u11B8 \\u110F\\u1173\\u1100\\u1175\\u1105\\u1169 \\u110C\\u1161\\u11AF\\u1105\\u1161 \\u1106\\u1165\\u11A8\\u1102\\u1173\\u11AB \\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173(React.js) - \\u1100\\u1175\\u110E\\u1169\\u1107\\u116E\\u1110\\u1165 \\u1109\\u1175\\u11AF\\u110C\\u1165\\u11AB\\u1101\\u1161\\u110C\\u1175 /what-did-i-eat-today/src/pages/Diary.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport { DiaryStateContext } from '../App';\nimport { useNavigate } from 'react-router-dom';\nimport { getStrDate } from './../Util/date';\nimport MyHeader from './../components/MyHeader';\nimport MyButton from './../components/MyButton';\nimport { exerciseList } from '../Util/exerciseList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Diary = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(it => parseInt(it.id) === parseInt(id));\n      if (targetDiary) {\n        setData(targetDiary);\n      } else {\n        alert('No diary page!');\n        navigate('/', {\n          replace: true\n        });\n      }\n    }\n  }, [id, diaryList]);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  } else {\n    const currentExerciseData = exerciseList.find(it => parseInt(it.exercise.id) === parseInt(data.exercise));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: /*#__PURE__*/_jsxDEV(MyHeader, {\n        headText: `${getStrDate(new Date(data.date))}`,\n        leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n          text: '< back',\n          onClick: () => navigate(-1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this),\n        rightChild: /*#__PURE__*/_jsxDEV(MyButton, {\n          text: 'Edit',\n          onClick: () => navigate(`/edit/${data.id}`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Diary, \"GHqBxuwZ/RI84ZMN8TYIbTBgEas=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Diary;\nexport default Diary;\nvar _c;\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"names":["useParams","useContext","useEffect","useState","DiaryStateContext","useNavigate","getStrDate","MyHeader","MyButton","exerciseList","Diary","id","diaryList","navigate","data","setData","length","targetDiary","find","it","parseInt","alert","replace","currentExerciseData","exercise","Date","date"],"sources":["/Users/yoojeongkim/Documents/Kim-Yoo-Jeong/[인프런] 한입 크기로 잘라 먹는 리액트(React.js) - 기초부터 실전까지 /what-did-i-eat-today/src/pages/Diary.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport { DiaryStateContext } from '../App';\nimport { useNavigate } from 'react-router-dom';\nimport { getStrDate } from './../Util/date';\nimport MyHeader from './../components/MyHeader';\nimport MyButton from './../components/MyButton';\nimport { exerciseList } from '../Util/exerciseList';\n\nconst Diary = () => {\n  const { id } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find((it) => parseInt(it.id) === parseInt(id));\n\n      if (targetDiary) {\n        setData(targetDiary);\n      } else {\n        alert('No diary page!');\n        navigate('/', { replace: true });\n      }\n    }\n  }, [id, diaryList]);\n\n  if (!data) {\n    return <div className='DiaryPage'>Loading...</div>;\n  } else {\n    const currentExerciseData = exerciseList.find(\n      (it) => parseInt(it.exercise.id) === parseInt(data.exercise),\n    );\n\n    return (\n      <div className='DiaryPage'>\n        <MyHeader\n          headText={`${getStrDate(new Date(data.date))}`}\n          leftChild={<MyButton text={'< back'} onClick={() => navigate(-1)} />}\n          rightChild={<MyButton text={'Edit'} onClick={() => navigate(`/edit/${data.id}`)} />}\n        />\n      </div>\n    );\n  }\n};\n\nexport default Diary;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,iBAAiB,QAAQ,QAAQ;AAC1C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,YAAY,QAAQ,sBAAsB;AAAC;AAEpD,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM;IAAEC;EAAG,CAAC,GAAGX,SAAS,EAAE;EAC1B,MAAMY,SAAS,GAAGX,UAAU,CAACG,iBAAiB,CAAC;EAC/C,MAAMS,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,EAAE;EAElCD,SAAS,CAAC,MAAM;IACd,IAAIU,SAAS,CAACI,MAAM,IAAI,CAAC,EAAE;MACzB,MAAMC,WAAW,GAAGL,SAAS,CAACM,IAAI,CAAEC,EAAE,IAAKC,QAAQ,CAACD,EAAE,CAACR,EAAE,CAAC,KAAKS,QAAQ,CAACT,EAAE,CAAC,CAAC;MAE5E,IAAIM,WAAW,EAAE;QACfF,OAAO,CAACE,WAAW,CAAC;MACtB,CAAC,MAAM;QACLI,KAAK,CAAC,gBAAgB,CAAC;QACvBR,QAAQ,CAAC,GAAG,EAAE;UAAES,OAAO,EAAE;QAAK,CAAC,CAAC;MAClC;IACF;EACF,CAAC,EAAE,CAACX,EAAE,EAAEC,SAAS,CAAC,CAAC;EAEnB,IAAI,CAACE,IAAI,EAAE;IACT,oBAAO;MAAK,SAAS,EAAC,WAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB;EACpD,CAAC,MAAM;IACL,MAAMS,mBAAmB,GAAGd,YAAY,CAACS,IAAI,CAC1CC,EAAE,IAAKC,QAAQ,CAACD,EAAE,CAACK,QAAQ,CAACb,EAAE,CAAC,KAAKS,QAAQ,CAACN,IAAI,CAACU,QAAQ,CAAC,CAC7D;IAED,oBACE;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB,QAAC,QAAQ;QACP,QAAQ,EAAG,GAAElB,UAAU,CAAC,IAAImB,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,CAAE,EAAE;QAC/C,SAAS,eAAE,QAAC,QAAQ;UAAC,IAAI,EAAE,QAAS;UAAC,OAAO,EAAE,MAAMb,QAAQ,CAAC,CAAC,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAI;QACrE,UAAU,eAAE,QAAC,QAAQ;UAAC,IAAI,EAAE,MAAO;UAAC,OAAO,EAAE,MAAMA,QAAQ,CAAE,SAAQC,IAAI,CAACH,EAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA;IACpF;MAAA;MAAA;MAAA;IAAA,QACE;EAEV;AACF,CAAC;AAAC,GApCID,KAAK;EAAA,QACMV,SAAS,EAEPK,WAAW;AAAA;AAAA,KAHxBK,KAAK;AAsCX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}